{"version":3,"sources":["media/sun.png","media/clouds.svg","media/rain.svg","media/mist.png","media/haze.png","media/location.svg","media/search.svg","components/GraphComponent.js","components/MiniWeather.js","components/Search.js","components/App.js","index.js"],"names":["module","exports","GraphComponent","props","className","temp","src","sun","MiniWeather","weekday","Array","buttons","useState","childprops","index","icon","undefined","daily","i","date","Date","dt","day","getDay","mainTemp","Math","trunc","max","secondTemp","min","weather","main","clouds","rain","mist","haze","push","key","onClick","console","log","cities","require","Search","state","cityName","stateName","searchString","searchResults","currentTemperature","currentWeather","dailyWeather","hourlyWeather","searchText","bind","selectCity","city","coord","str","document","getElementById","style","display","url","lat","lon","fetch","then","response","json","data","setState","hourly","event","dataArray","count","target","value","this","length","name","includes","temperature","forEach","element","uri","searchData","navigator","geolocation","getCurrentPosition","position","error","ele","alt","location","type","placeholder","id","onChange","search","map","React","Component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.4ee93b93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.540e3938.png\";","module.exports = __webpack_public_path__ + \"static/media/clouds.849e970e.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.d8fdecc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/mist.1502cf8d.png\";","module.exports = __webpack_public_path__ + \"static/media/haze.e9567180.png\";","module.exports = __webpack_public_path__ + \"static/media/location.d9d208a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.c4127766.svg\";","import React from \"react\"\r\nimport \"../css/graphcomponent.css\"\r\nimport sun from \"../media/sun.png\"\r\nimport clouds from \"../media/clouds.svg\"\r\nimport rain from \"../media/rain.svg\"\r\nimport mist from \"../media/mist.png\"\r\nimport haze from \"../media/haze.png\"\r\n\r\n\r\nfunction GraphComponent(props){\r\n    //console.log(props.temp)\r\n    return(\r\n        <div className=\"middle-container\">\r\n            <div className=\"temperature\">\r\n                <span>{props.temp}&deg;C</span>\r\n                <img src={sun}></img>\r\n            </div>\r\n        </div>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default GraphComponent","import React, {useState} from \"react\"\r\nimport \"../css/miniweather.css\"\r\nimport sun from \"../media/sun.png\"\r\nimport clouds from \"../media/clouds.svg\"\r\nimport rain from \"../media/rain.svg\"\r\nimport mist from \"../media/mist.png\"\r\nimport haze from \"../media/haze.png\"\r\nimport GraphComponent from \"./GraphComponent\"\r\n\r\nfunction MiniWeather(props){\r\n    \r\n    let weekday = new Array(7);\r\n    weekday[0] = \"Sunday\";\r\n    weekday[1] = \"Monday\";\r\n    weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n    weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n    let src=sun;\r\n    let buttons = []\r\n    const [index,setIndex] = useState(0);\r\n    var childprops={index:0,icon:\"\"};\r\n    \r\n    if(props.daily!=undefined){\r\n        for(let i=0;i<5;i++){\r\n            let date = new Date(props.daily[i].dt * 1000);\r\n            let day= weekday[date.getDay()];\r\n            let mainTemp=Math.trunc(props.daily[i].temp.max-273.15);\r\n            let secondTemp=Math.trunc(props.daily[i].temp.min-273.15);\r\n            let weather = props.daily[i].weather[0].main;\r\n            \r\n            if(props.daily[i].weather[0].main===\"Clouds\") src=clouds;\r\n            else if(props.daily[i].weather[0].main===\"Rain\") src=rain;\r\n            else if(props.daily[i].weather[0].main===\"Mist\") src=mist;\r\n            else if(props.daily[i].weather[0].main===\"Sun\") src=sun;\r\n            else if(props.daily[i].weather[0].main===\"Clear\") src=sun;\r\n            else if(props.daily[i].weather[0].main===\"Haze\") src=haze;\r\n            \r\n            buttons.push(<button key={i} className=\"day-button\" onClick={()=>{childprops.index=i; childprops.icon=src; console.log(Math.trunc(props.daily[i].temp.day-273.15))}}>\r\n                    <span className=\"day\"><b>{day}</b></span>\r\n                    <div className=\"miniwidget\">\r\n                        <span><b>{mainTemp}&deg; </b> </span>\r\n                        <span className=\"second-temp\">{secondTemp}&deg;</span>\r\n                    </div>\r\n                    <img src={src}></img>\r\n                    <span className=\"short-weather\">{weather}</span>\r\n                </button>)\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n    return(\r\n        <div>\r\n            <div className=\"miniweather\">\r\n\r\n                {buttons}\r\n\r\n            </div>\r\n            <br></br>\r\n            <GraphComponent temp={Math.trunc(props.daily[childprops.index].temp.day-273.15)}/>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default MiniWeather","import React from \"react\"\r\nimport \"../css/search.css\"\r\nimport location from \"../media/location.svg\"\r\nimport search from \"../media/search.svg\"\r\nimport clouds from \"../media/clouds.svg\"\r\nimport rain from \"../media/rain.svg\"\r\nimport sun from \"../media/sun.png\"\r\nimport mist from \"../media/mist.png\"\r\nimport haze from \"../media/haze.png\"\r\n\r\nimport MiniWeather from \"./MiniWeather\"\r\nimport GraphComponent from \"./GraphComponent.js\"\r\nvar cities = require('../city.list.min.json');\r\n\r\nclass Search extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            cityName:\"Mumbai\",\r\n            stateName:\"Maharashra\",\r\n            searchString:\"Mumbai, Maharashtra\",\r\n            searchResults:[],\r\n            currentTemperature:0,\r\n            currentWeather:{},\r\n            dailyWeather:[],\r\n            hourlyWeather:[]\r\n        };\r\n\r\n        this.searchText = this.searchText.bind(this);\r\n        this.selectCity = this.selectCity.bind(this);\r\n    }\r\n    \r\n    selectCity(city,state,coord){\r\n        let str = `${city}, ${state}`;\r\n        document.getElementById(\"dropdown\").style.display=\"none\";\r\n        let url = `http://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&exclude=minutely&appid=9e2a8bf2d665766c4005240c404f861a`\r\n        \r\n        fetch(url).then(response=> response.json()).then(data=>{this.setState({cityName:city, \r\n                                                                               stateName:state, \r\n                                                                               searchString:str, \r\n                                                                               searchResults:[], \r\n                                                                               dailyWeather:data.daily, \r\n                                                                               hourlyWeather: data.hourly\r\n                                                                              })})\r\n\r\n    }\r\n    \r\n    searchText(event){\r\n        document.getElementById(\"dropdown\").style.display=\"block\";\r\n        \r\n        let dataArray=[]\r\n        let count=0;\r\n        if(event.target.value===\"\" || event.target.value===undefined)\r\n            {\r\n                this.setState({searchResults:[], searchString:\"\"})\r\n            }else {\r\n                \r\n                this.setState({searchString: event.target.value}, function(){\r\n                    for(let i=0; i<cities.length; i++){\r\n                        if(count < 5){\r\n                            if (cities[i].name.includes(this.state.searchString)){\r\n                                count ++;\r\n                                let state=\"\"\r\n                                if (cities[i].state==\"\") dataArray.push({name: cities[i].name, state:cities[i].name, coord: cities[i].coord})\r\n                                else dataArray.push({name: cities[i].name, state:cities[i].state,  coord: cities[i].coord, weather:\"\", temperature:\"\"})\r\n                            }\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    \r\n                    dataArray.forEach((element,index)=>{\r\n                                    let uri = `http://api.openweathermap.org/data/2.5/weather?q=${element.name}&appid=9e2a8bf2d665766c4005240c404f861a`\r\n                                    fetch(uri).then(response=>response.json()).then(data=>\r\n                                            {       \r\n                                                    let searchData = dataArray;\r\n                                                    if(data.weather!=undefined){\r\n                                                    searchData[index].weather=data.weather[0].main; \r\n                                                    if(data.weather[0].main===\"Clouds\") searchData[index].icon=clouds;\r\n                                                    else if(data.weather[0].main===\"Rain\") searchData[index].icon=rain;\r\n                                                    else if(data.weather[0].main===\"Mist\") searchData[index].icon=mist;\r\n                                                    else if(data.weather[0].main===\"Sun\") searchData[index].icon=sun;\r\n                                                    else if(data.weather[0].main===\"Clear\") searchData[index].icon=sun;\r\n                                                    else if(data.weather[0].main===\"Haze\") searchData[index].icon=haze;\r\n                                                } else {searchData[index].icon=sun; searchData[index].temperature=29;}\r\n                                                if(data.main!=undefined)searchData[index].temperature=Math.trunc(data.main.temp-273.15);\r\n                                                this.setState({searchResults:searchData})\r\n                                             }\r\n                                      )\r\n                        })\r\n\r\n                    \r\n                    \r\n                });\r\n                \r\n            }\r\n        \r\n    }\r\n    //{ lon: 72.847939, lat: 19.01441 }\r\n    componentDidMount(){\r\n    if(!navigator.geolocation) {\r\n        // Default location considered Mumbai\r\n        console.log('Geolocation is not supported by your browser');\r\n        let url = `http://api.openweathermap.org/data/2.5/onecall?lat=72.847939&lon=19.01441&exclude=minutely&appid=9e2a8bf2d665766c4005240c404f861a`\r\n        fetch(url).then(response=> response.json()).then(data=>{this.setState({dailyWeather:data.daily, \r\n                                                                               hourlyWeather: data.hourly\r\n                                                                              })\r\n                                                               })\r\n\r\n    } else {\r\n        navigator.geolocation.getCurrentPosition((position)=>{console.log(position)}, (error)=>{console.log(\"Cannot fetch your location\")});\r\n        \r\n        let city=\"Mumbai\"\r\n        let state=\"Maharashtra\"\r\n        let coord={\r\n                    \"lon\": 72.847939,\r\n                    \"lat\": 19.01441\r\n                }\r\n        fetch(\"http://ip-api.com/json/\").then(response=>response.json()).then(data=>{\r\n            for(let i=0;i<cities.length;i++){\r\n                if(cities[i].name==data.city){\r\n                    city=cities[i].name;\r\n                    state=cities[i].state;\r\n                    coord=cities[i].coord;\r\n                }\r\n            }\r\n            let url = `http://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&exclude=minutely&appid=9e2a8bf2d665766c4005240c404f861a`\t\t\r\n            fetch(url).then(response=>response.json()).then(data=> this.setState({\r\n                        cityName: city,\r\n                        stateName: state,\r\n                        dailyWeather:data.daily,\r\n                        hourlyWeather:data.hourlyWeather\r\n            }))\r\n            \r\n        });\r\n    }\r\n    }\r\n        \r\n    \r\n    \r\n    render(){\r\n        //console.log(this.state.dailyWeather)\r\n        var ele = \"\"\r\n        if(this.state.dailyWeather.length>0) ele = (<MiniWeather daily={this.state.dailyWeather}/>);\r\n        return(\r\n            <div>\r\n                <div className=\"search-container\">\r\n                    <img className=\"location-icon\" alt=\"Location icon\" src={location}></img>\r\n                    <input type=\"text\" placeholder=\"\" id=\"searchbox\" value={this.state.searchString} onChange={this.searchText}></input>\r\n                    <img className=\"search-icon\" alt=\"Search icon\" src={search}></img>\r\n                </div>\r\n                <div className=\"search-results\" id=\"dropdown\">\r\n                    {   \r\n                        this.state.searchResults.map(\r\n                            (element,index)=> (<button key={index} alt=\"Options\" onClick={()=>this.selectCity(element.name, element.state, element.coord)} className=\"result\">{element.name}, {element.state}\r\n                                        <div className=\"mini-weather-dropdown\"> \r\n                                            <div className=\"temp-weather-dropdown\">\r\n                                                <span className=\"temp-dropdown\">{element.temperature}&deg; C</span>\r\n                                                <span className=\"weather-dropdown\">{element.weather}</span>\r\n                                            </div>\r\n                                            <img className=\"drop-down-weather\" alt=\"Drop down weather\" src={element.icon} />\r\n                                        </div>\r\n                                        </button>)\r\n                            \r\n                        )\r\n                    \r\n                    }\r\n                </div>\r\n                <br></br>\r\n                {\r\n                    ele\r\n                }\r\n                <br></br>\r\n                \r\n            </div>\r\n        )    \r\n    }\r\n}\r\nexport default Search","import React from 'react';\nimport Search from \"./Search\"\nimport \"../css/app.css\"\nclass App extends React.Component {\n    \n    constructor(props){\n        super(props)\n        \n    }\n    \n  render(){\n      return (  \n        <div className=\"App\">\n              <Search />\n        </div>\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}